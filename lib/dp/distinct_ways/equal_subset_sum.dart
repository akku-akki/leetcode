import '../../test/debug_utils.dart/u.dart';

void main() {
  print(Solution().canPartition([
    5,
    79,
    2,
    4,
    8,
    16,
    32,
    64,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100
  ]));
}

class Solution {
  bool canPartition(List<int> nums) {
    int totalSum = 0;
    for (int i = 0; i < nums.length; i++) {
      totalSum += nums[i];
    }
    if (!(totalSum % 2 == 0)) return false;
    int sum = totalSum ~/ 2;
    List<List<bool?>> memo = List.generate(
        nums.length + 1,
        (index) => List.generate(
              sum + 1,
              (index) => null,
            ));
    print('HU');

    return getCanPartition(0, sum, nums, memo);
  }

  bool getCanPartition(
    int index,
    int sum,
    List<int> nums,
    List<List<bool?>> memo,
  ) {
    if (sum == 0) return true;
    if (nums.length == index || sum < 0) return false;
    if (memo[index][sum] != null) {
      return memo[index][sum]!;
    }
    memo[index][sum] =
        getCanPartition(index + 1, sum - nums[index], nums, memo) ||
            getCanPartition(index + 1, sum, nums, memo);
    return memo[index][sum]!;
  }
}
